{"remainingRequest":"E:\\VUE\\VueProject\\electric-power\\node_modules\\babel-loader\\lib\\index.js!E:\\VUE\\VueProject\\electric-power\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\VUE\\VueProject\\electric-power\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\VUE\\VueProject\\electric-power\\src\\test\\front-collector.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\VUE\\VueProject\\electric-power\\src\\test\\front-collector.vue","mtime":1601959934284},{"path":"E:\\VUE\\VueProject\\electric-power\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1599874220956},{"path":"E:\\VUE\\VueProject\\electric-power\\node_modules\\babel-loader\\lib\\index.js","mtime":1599874250055},{"path":"E:\\VUE\\VueProject\\electric-power\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1599874220956},{"path":"E:\\VUE\\VueProject\\electric-power\\node_modules\\vue-loader\\lib\\index.js","mtime":1599874242496}],"contextDependencies":[],"result":["//\n//\n//\nexport default {\n  name: 'mqttws',\n  data: function data() {\n    return {\n      client: new Paho.MQTT.Client(\"10.12.8.172\", 15675, \"\"),\n      //第三个参数是clientID可以为空\n      topic: \"XXXX\" // 订阅的主题\n\n    };\n  },\n  created: function created() {\n    this.client.connect({\n      onSuccess: this.onConnect\n    }); //连接服务器并注册连接成功处理事件\n\n    this.client.onConnectionLost = this.onConnectionLost; //注册连接断开处理事件\n\n    this.client.onMessageArrived = this.onMessageArrived; //注册消息接收处理事件\n  },\n  methods: {\n    onConnectionLost: function onConnectionLost(responseObject) {\n      if (responseObject.errorCode !== 0) {\n        console.log(\"onConnectionLost:\" + responseObject.errorMessage);\n        console.log(\"连接已断开\");\n      }\n    },\n    onMessageArrived: function onMessageArrived(message) {\n      console.log(\"收到消息:\" + message.payloadString);\n    },\n    onConnect: function onConnect() {\n      console.log(\"onConnected\");\n      this.client.subscribe(this.topic); //订阅主题\n    }\n  }\n};",{"version":3,"sources":["front-collector.vue"],"names":[],"mappings":";;;AAIA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,IAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,aAAA,EAAA,KAAA,EAAA,EAAA,CADA;AACA;AACA,MAAA,KAAA,EAAA,MAFA,CAEA;;AAFA,KAAA;AAIA,GAPA;AAQA,EAAA,OARA,qBAQA;AACA,SAAA,MAAA,CAAA,OAAA,CAAA;AAAA,MAAA,SAAA,EAAA,KAAA;AAAA,KAAA,EADA,CACA;;AACA,SAAA,MAAA,CAAA,gBAAA,GAAA,KAAA,gBAAA,CAFA,CAEA;;AACA,SAAA,MAAA,CAAA,gBAAA,GAAA,KAAA,gBAAA,CAHA,CAGA;AACA,GAZA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,gBAAA,EAAA,0BAAA,cAAA,EAAA;AACA,UAAA,cAAA,CAAA,SAAA,KAAA,CAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,sBAAA,cAAA,CAAA,YAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,OAAA;AACA;AACA,KANA;AAOA,IAAA,gBAAA,EAAA,0BAAA,OAAA,EAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,UAAA,OAAA,CAAA,aAAA;AACA,KATA;AAUA,IAAA,SAAA,EAAA,qBAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,aAAA;AACA,WAAA,MAAA,CAAA,SAAA,CAAA,KAAA,KAAA,EAFA,CAEA;AACA;AAbA;AAbA,CAAA","sourcesContent":["<template>\r\n\t\r\n</template>\r\n<script>\r\n\texport default {\r\n\t    name: 'mqttws',\r\n\t    data() {\r\n\t      return {\r\n\t        client : new Paho.MQTT.Client(\"10.12.8.172\", 15675, \"\"),//第三个参数是clientID可以为空\r\n\t        topic: \"XXXX\"// 订阅的主题\r\n\t      }\r\n\t    },\r\n\t    created () {\r\n\t      this.client.connect({onSuccess:this.onConnect});//连接服务器并注册连接成功处理事件\r\n\t      this.client.onConnectionLost = this.onConnectionLost;//注册连接断开处理事件\r\n\t      this.client.onMessageArrived = this.onMessageArrived;//注册消息接收处理事件\r\n\t    },\r\n\t    methods : {\r\n\t      onConnectionLost:function (responseObject) {\r\n\t        if (responseObject.errorCode !== 0) {\r\n\t          console.log(\"onConnectionLost:\"+responseObject.errorMessage);\r\n\t          console.log(\"连接已断开\");\r\n\t        }\r\n\t      },\r\n\t      onMessageArrived: function(message) {\r\n\t        console.log(\"收到消息:\"+message.payloadString);\r\n\t      },\r\n\t      onConnect : function() {\r\n\t        console.log(\"onConnected\");\r\n\t        this.client.subscribe(this.topic);//订阅主题\r\n\t      }\r\n\t    }\r\n\t  }\r\n\r\n</script>"],"sourceRoot":"src/test"}]}