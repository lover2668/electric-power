{"remainingRequest":"E:\\VUE\\VueProject\\electric-power\\node_modules\\babel-loader\\lib\\index.js!E:\\VUE\\VueProject\\electric-power\\src\\main.js","dependencies":[{"path":"E:\\VUE\\VueProject\\electric-power\\src\\main.js","mtime":1607740835202},{"path":"E:\\VUE\\VueProject\\electric-power\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1599874220956},{"path":"E:\\VUE\\VueProject\\electric-power\\node_modules\\babel-loader\\lib\\index.js","mtime":1599874250055}],"contextDependencies":[],"result":["import \"E:\\\\VUE\\\\VueProject\\\\electric-power\\\\node_modules\\\\core-js\\\\modules\\\\es6.array.iterator.js\";\nimport \"E:\\\\VUE\\\\VueProject\\\\electric-power\\\\node_modules\\\\core-js\\\\modules\\\\es6.promise.js\";\nimport \"E:\\\\VUE\\\\VueProject\\\\electric-power\\\\node_modules\\\\core-js\\\\modules\\\\es6.object.assign.js\";\nimport \"E:\\\\VUE\\\\VueProject\\\\electric-power\\\\node_modules\\\\core-js\\\\modules\\\\es7.promise.finally.js\";\nimport Vue from 'vue';\nimport App from \"./App.vue\"; // 引入echarts\n\nimport echarts from 'echarts';\nVue.prototype.$echarts = echarts; //\n//引入element组件\n\nimport ElementUI from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css';\nVue.use(ElementUI); //\n//引入路由\n\nimport router from \"./router/index.js\"; //\n//引入axios\n\nimport axios from 'axios';\nVue.prototype.$axios = axios;\naxios.defaults.baseURL = common.apiUrl; //每个axios请求前会自动加上请求地址\n\naxios.defaults.headers.post['Content-Type'] = 'application/json;charset=UTF-8'; //配置请求头\n\naxios.interceptors.request.use(function (config) {\n  // 在发送请求之前做些什么\n  // 每次请求就不需要设置参数token了\n  config.headers.Authorization = window.sessionStorage.getItem('token');\n  return config;\n});\naxios.interceptors.response.use(function (res) {\n  //res是axios所包装的数据，包含data,headers,status,statusText\n  //可以在这里对返回的数据进行处理\n  return res; //返回请求成功的所以数据\n}, function (err) {\n  //处理响应的错误信息\n  console.log('err');\n  console.log(err.response.status); //显示报错信息(例如401、500)\n\n  if (err && err.response) {\n    switch (err.response.status) {\n      case 401:\n        this.$message({\n          message: '登录验证已经过期，已返回登录界面，请重新登录！',\n          type: 'warning'\n        });\n        err.message = '未授权，请重新登录(401)';\n        router.push(\"/login\");\n        sessionStorage.setItem('token', null);\n        break;\n    }\n  } else {\n    err.message = '连接服务器失败!';\n  }\n\n  return Promise.reject(err);\n});\nimport qs from 'qs';\nVue.prototype.qs = qs; //\n//引入公共数据\n\nimport common from \"../public/common.js\";\nVue.prototype.COMMON = common;\nVue.config.productionTip = false; //引入从阿里下载的图标\n\nimport \"./assets/icon/iconfont.css\";\nnew Vue({\n  router: router,\n  render: function render(h) {\n    return h(App);\n  }\n}).$mount('#app');",{"version":3,"sources":["E:\\VUE\\VueProject\\electric-power\\src\\main.js"],"names":["Vue","App","echarts","prototype","$echarts","ElementUI","use","router","axios","$axios","defaults","baseURL","common","apiUrl","headers","post","interceptors","request","config","Authorization","window","sessionStorage","getItem","response","res","err","console","log","status","$message","message","type","push","setItem","Promise","reject","qs","COMMON","productionTip","render","h","$mount"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,GAAP,kB,CAEA;;AACA,OAAOC,OAAP,MAAoB,SAApB;AACAF,GAAG,CAACG,SAAJ,CAAcC,QAAd,GAAyBF,OAAzB,C,CACA;AAEA;;AACA,OAAOG,SAAP,MAAsB,YAAtB;AACA,OAAO,sCAAP;AACAL,GAAG,CAACM,GAAJ,CAAQD,SAAR,E,CACA;AAEA;;AACA,OAAOE,MAAP,0B,CACA;AAEA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACAR,GAAG,CAACG,SAAJ,CAAcM,MAAd,GAAuBD,KAAvB;AACAA,KAAK,CAACE,QAAN,CAAeC,OAAf,GAAuBC,MAAM,CAACC,MAA9B,C,CAAqC;;AACrCL,KAAK,CAACE,QAAN,CAAeI,OAAf,CAAuBC,IAAvB,CAA4B,cAA5B,IAA8C,gCAA9C,C,CAAgF;;AAEhFP,KAAK,CAACQ,YAAN,CAAmBC,OAAnB,CAA2BX,GAA3B,CACC,UAASY,MAAT,EAAiB;AAChB;AACA;AACAA,EAAAA,MAAM,CAACJ,OAAP,CAAeK,aAAf,GAA+BC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,OAA9B,CAA/B;AACA,SAAOJ,MAAP;AACA,CANF;AASAV,KAAK,CAACQ,YAAN,CAAmBO,QAAnB,CAA4BjB,GAA5B,CAAgC,UAASkB,GAAT,EAAa;AACzC;AACA;AACA,SAAOA,GAAP,CAHyC,CAG9B;AACd,CAJD,EAIE,UAASC,GAAT,EAAa;AACX;AACHC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACF,QAAJ,CAAaK,MAAzB,EAHc,CAGmB;;AACjC,MAAIH,GAAG,IAAIA,GAAG,CAACF,QAAf,EAAyB;AACjB,YAAQE,GAAG,CAACF,QAAJ,CAAaK,MAArB;AACI,WAAK,GAAL;AACR,aAAKC,QAAL,CAAc;AACbC,UAAAA,OAAO,EAAE,yBADI;AAEbC,UAAAA,IAAI,EAAE;AAFO,SAAd;AAIAN,QAAAA,GAAG,CAACK,OAAJ,GAAc,gBAAd;AACAvB,QAAAA,MAAM,CAACyB,IAAP,CAAY,QAAZ;AACAX,QAAAA,cAAc,CAACY,OAAf,CAAuB,OAAvB,EAA+B,IAA/B;AACA;AATI;AAWH,GAZL,MAYS;AACDR,IAAAA,GAAG,CAACK,OAAJ,GAAc,UAAd;AACH;;AACD,SAAOI,OAAO,CAACC,MAAR,CAAeV,GAAf,CAAP;AAEJ,CAzBD;AA2BA,OAAOW,EAAP,MAAe,IAAf;AACApC,GAAG,CAACG,SAAJ,CAAciC,EAAd,GAAmBA,EAAnB,C,CACA;AAEA;;AACA,OAAOxB,MAAP;AACAZ,GAAG,CAACG,SAAJ,CAAckC,MAAd,GAAuBzB,MAAvB;AAEAZ,GAAG,CAACkB,MAAJ,CAAWoB,aAAX,GAA2B,KAA3B,C,CAEA;;AACA;AAEA,IAAItC,GAAJ,CAAQ;AACPO,EAAAA,MAAM,EAANA,MADO;AAEPgC,EAAAA,MAAM,EAAE,gBAAAC,CAAC;AAAA,WAAIA,CAAC,CAACvC,GAAD,CAAL;AAAA;AAFF,CAAR,EAGGwC,MAHH,CAGU,MAHV","sourcesContent":["import Vue from 'vue'\r\nimport App from './App.vue'\r\n\r\n// 引入echarts\r\nimport echarts from 'echarts'\r\nVue.prototype.$echarts = echarts\r\n//\r\n\r\n//引入element组件\r\nimport ElementUI from 'element-ui';\r\nimport 'element-ui/lib/theme-chalk/index.css';\r\nVue.use(ElementUI);\r\n//\r\n\r\n//引入路由\r\nimport router from './router/index.js'\r\n//\r\n\r\n//引入axios\r\nimport axios from 'axios'\r\nVue.prototype.$axios = axios;\r\naxios.defaults.baseURL=common.apiUrl;//每个axios请求前会自动加上请求地址\r\naxios.defaults.headers.post['Content-Type'] = 'application/json;charset=UTF-8'; //配置请求头\r\n\r\naxios.interceptors.request.use(\r\n\tfunction(config) {\r\n\t\t// 在发送请求之前做些什么\r\n\t\t// 每次请求就不需要设置参数token了\r\n\t\tconfig.headers.Authorization = window.sessionStorage.getItem('token')\r\n\t\treturn config\r\n\t}\r\n)\r\n\r\naxios.interceptors.response.use(function(res){\n    //res是axios所包装的数据，包含data,headers,status,statusText\n    //可以在这里对返回的数据进行处理\n    return res;//返回请求成功的所以数据\n},function(err){\n    //处理响应的错误信息\r\n\tconsole.log('err');\r\n\tconsole.log(err.response.status);//显示报错信息(例如401、500)\r\n\tif (err && err.response) {\r\n\t        switch (err.response.status) {\r\n\t            case 401: \r\n\t\t\t\t\tthis.$message({\r\n\t\t\t\t\t\tmessage: '登录验证已经过期，已返回登录界面，请重新登录！',\r\n\t\t\t\t\t\ttype: 'warning'\r\n\t\t\t\t\t});\r\n\t\t\t\t\terr.message = '未授权，请重新登录(401)'; \r\n\t\t\t\t\trouter.push(\"/login\");\r\n\t\t\t\t\tsessionStorage.setItem('token',null);\r\n\t\t\t\t\tbreak;\r\n\t        }\r\n\t    }else{\r\n\t        err.message = '连接服务器失败!'\r\n\t    }\r\n\t    return Promise.reject(err);\r\n\t\n})\r\n\r\nimport qs from 'qs';\r\nVue.prototype.qs = qs;\r\n//\r\n\r\n//引入公共数据\r\nimport common from '../public/common.js'\r\nVue.prototype.COMMON = common;\r\n\r\nVue.config.productionTip = false\r\n\r\n//引入从阿里下载的图标\r\nimport './assets/icon/iconfont.css'\r\n\r\nnew Vue({\r\n\trouter,\r\n\trender: h => h(App),\r\n}).$mount('#app')\n"]}]}