{"remainingRequest":"E:\\VUE\\VueProject\\electric-power\\node_modules\\babel-loader\\lib\\index.js!E:\\VUE\\VueProject\\electric-power\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\VUE\\VueProject\\electric-power\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\VUE\\VueProject\\electric-power\\src\\test\\demo2.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\VUE\\VueProject\\electric-power\\src\\test\\demo2.vue","mtime":1601959693014},{"path":"E:\\VUE\\VueProject\\electric-power\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1599874220956},{"path":"E:\\VUE\\VueProject\\electric-power\\node_modules\\babel-loader\\lib\\index.js","mtime":1599874250055},{"path":"E:\\VUE\\VueProject\\electric-power\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1599874220956},{"path":"E:\\VUE\\VueProject\\electric-power\\node_modules\\vue-loader\\lib\\index.js","mtime":1599874242496}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport mqtt from 'mqtt';\nvar client;\nvar options = {\n  connectTimeout: 40000,\n  clientId: 'mqtitId-Home',\n  username: 'admin',\n  password: 'admin',\n  clean: true //使用websocket连接mqtt服务器，注意RabbitMQ启用WEB MQTT插件\n\n};\nclient = mqtt.connect('ws://10.12.8.172:15675/ws', options); //安装 npm install mqtt --save\n\nexport default {\n  data: function data() {\n    return {\n      title: 'Hello'\n    };\n  },\n  created: function created() {},\n  onLoad: function onLoad() {},\n  mounted: function mounted() {\n    this.mqttMsg();\n    console.log('执行');\n  },\n  methods: {\n    mqttMsg: function mqttMsg() {\n      var _this = this;\n\n      client.on('connect', function (e) {\n        console.log(\"连接成功！！！\");\n        client.subscribe('iotgateway', {\n          qos: 0\n        }, function (error) {\n          if (!error) {\n            console.log('订阅成功');\n          } else {\n            console.log('订阅失败');\n          }\n        });\n      }); // 接收消息处理\n\n      client.on('message', function (topic, message) {\n        console.log('收到来自', topic, '的消息', message.toString());\n        _this.msg = message.toString();\n      });\n    }\n  }\n};",{"version":3,"sources":["demo2.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAgBA,OAAA,IAAA,MAAA,MAAA;AACA,IAAA,MAAA;AACA,IAAA,OAAA,GAAA;AACA,EAAA,cAAA,EAAA,KADA;AAEA,EAAA,QAAA,EAAA,cAFA;AAGA,EAAA,QAAA,EAAA,OAHA;AAIA,EAAA,QAAA,EAAA,OAJA;AAKA,EAAA,KAAA,EAAA,IALA,CAOA;;AAPA,CAAA;AAQA,MAAA,GAAA,IAAA,CAAA,OAAA,CAAA,2BAAA,EAAA,OAAA,CAAA,C,CACA;;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AADA,KAAA;AAGA,GALA;AAMA,EAAA,OANA,qBAMA,CAEA,CARA;AASA,EAAA,MATA,oBASA,CAEA,CAXA;AAYA,EAAA,OAZA,qBAYA;AACA,SAAA,OAAA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AACA,GAfA;AAgBA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AAAA;;AACA,MAAA,MAAA,CAAA,EAAA,CAAA,SAAA,EAAA,UAAA,CAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,SAAA;AACA,QAAA,MAAA,CAAA,SAAA,CAAA,YAAA,EAAA;AAAA,UAAA,GAAA,EAAA;AAAA,SAAA,EAAA,UAAA,KAAA,EAAA;AACA,cAAA,CAAA,KAAA,EAAA;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,MAAA;AACA,WAFA,MAEA;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,MAAA;AACA;AACA,SANA;AAQA,OAVA,EADA,CAYA;;AACA,MAAA,MAAA,CAAA,EAAA,CAAA,SAAA,EAAA,UAAA,KAAA,EAAA,OAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,MAAA,EAAA,KAAA,EAAA,KAAA,EAAA,OAAA,CAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,GAAA,GAAA,OAAA,CAAA,QAAA,EAAA;AACA,OAHA;AAIA;AAlBA;AAhBA,CAAA","sourcesContent":["<!--\r\n\t连接到mqtt服务器\r\n-->\r\n<template>\r\n\t<div>\n\t<view class=\"content\">\n\t\t<image class=\"logo\" src=\"/static/logo.png\"></image>\n\t\t<view class=\"text-area\">\n\t\t\t<text class=\"title\">{{title}}</text>\n\t\t</view>\n\t</view>\r\n\t<font>mqtt</font>\r\n\t</div>\n</template>\n\n<script>\n\timport mqtt from 'mqtt'\n\t  var client\n\t  const options = {\n\t    connectTimeout: 40000,\n\t    clientId: 'mqtitId-Home',\n\t    username: 'admin',\n\t    password: 'admin',\n\t    clean: true\n\t  }\n      //使用websocket连接mqtt服务器，注意RabbitMQ启用WEB MQTT插件\n\t  client = mqtt.connect('ws://10.12.8.172:15675/ws', options)\n\t //安装 npm install mqtt --save\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\ttitle: 'Hello'\n\t\t\t}\n\t\t},\n\t\tcreated() {\n\t\t  \n\t\t},\n\t\tonLoad() {\n\t\t\t\n\t\t},\r\n\t\tmounted() {\r\n\t\t\tthis.mqttMsg();\r\n\t\t\tconsole.log('执行');\r\n\t\t},\n\t\tmethods: {\n\t\t\tmqttMsg() {\n\t\t\t\tclient.on('connect', (e) => {\n\t\t\t\t  console.log(\"连接成功！！！\")\n\t\t\t\t  client.subscribe('iotgateway', { qos: 0 }, (error) => {\n\t\t\t\t\tif (!error) {\n\t\t\t\t\t  console.log('订阅成功')\n\t\t\t\t\t} else {\n\t\t\t\t\t  console.log('订阅失败')\n\t\t\t\t\t}\n\t\t\t\t  })\n\t\n\t\t\t})\n\t        // 接收消息处理\n\t        client.on('message', (topic, message) => {\n\t          console.log('收到来自', topic, '的消息', message.toString())\n\t          this.msg = message.toString()\n\t        })\n\t      }\n\t\t}\n\t}\n</script>"],"sourceRoot":"src/test"}]}