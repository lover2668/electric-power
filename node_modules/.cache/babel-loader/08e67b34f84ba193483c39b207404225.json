{"remainingRequest":"E:\\VUE\\VueProject\\electric-power\\node_modules\\babel-loader\\lib\\index.js!E:\\VUE\\VueProject\\electric-power\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\VUE\\VueProject\\electric-power\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\VUE\\VueProject\\electric-power\\src\\components\\powerData\\power-line.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\VUE\\VueProject\\electric-power\\src\\components\\powerData\\power-line.vue","mtime":1601659496531},{"path":"E:\\VUE\\VueProject\\electric-power\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1599874220956},{"path":"E:\\VUE\\VueProject\\electric-power\\node_modules\\babel-loader\\lib\\index.js","mtime":1599874250055},{"path":"E:\\VUE\\VueProject\\electric-power\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1599874220956},{"path":"E:\\VUE\\VueProject\\electric-power\\node_modules\\vue-loader\\lib\\index.js","mtime":1599874242496}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\nimport echarts from 'echarts';\nimport Bus from \"../../bus/bus.js\";\nexport default {\n  data: function data() {\n    return {\n      rearCollectorId: this.$route.params.rearCollectorId,\n      chartLine: '',\n      display: false,\n      timeInterval: [],\n      //存放时间节点\n      nameData: ['A相电流', 'B相电流', 'C相电流'],\n      AData: [10, 30, 20, 40, 20, 20, 50],\n      //A相线的数据\n      BData: [50, 40, 30, 20, 40, 60, 10],\n      //B相线的数据\n      CData: [20, 40, 30, 55, 10, 20, 40] //C相线的数据\n\n    };\n  },\n  mounted: function mounted() {\n    // this.getData();\n    this.drawEcharts();\n  },\n  methods: {\n    //获取图表所需数据\n    getData: function getData() {// var askData={\n      // \trearCollectorId:this.rearCollectorId\n      // };\n      // this.$axios({\n      // \tmethod: 'get',\n      // \turl: this.COMMON.url + '',\n      // \tdata:askData\n      // }).then(response => {\n      // \tthis.drawEcharts();\n      // }).catch(error => { // 请求失败\n      // \tconsole.log('请求失败');\n      // \tconsole.log(error);\n      // });\n    },\n    //初始化图表\n    drawEcharts: function drawEcharts() {\n      var time = new Date();\n      this.chartLine = this.$echarts.init(document.getElementById('chartLineBox')); //this.chartLine = this.$echarts.init(document.getElementById('chartLineBox'), 'dark');\n      // 指定图表的配置项和数据\n\n      var option = {\n        title: {\n          text: '电力数据'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: this.nameData\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: ['00:00:00', '00:15:00', '00:30:00', '00:45:00', '01:00:00', '01:15:00', '01:30:00']\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: this.nameData[0],\n          type: 'line',\n          stack: '百分比',\n          data: this.AData\n        }, {\n          name: this.nameData[1],\n          type: 'line',\n          stack: '百分比',\n          data: this.BData\n        }, {\n          name: this.nameData[2],\n          type: 'line',\n          stack: '百分比',\n          data: this.CData\n        }]\n      }; // 使用刚指定的配置项和数据显示图表。\n\n      this.chartLine.setOption(option);\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    //组件销毁执行\n    //清除定时器\n    clearInterval(this.timer);\n    console.log(\"beforeDestroy\");\n  },\n  destroyed: function destroyed() {\n    // 销毁监听事件\n    //清除定时器\n    //clearInterval(this.timer);\n    console.log(\"destroyed\");\n  },\n  created: function created() {\n    Bus.$on('rearData', function (target) {\n      console.log(target);\n    });\n  },\n  watch: {\n    $route: {\n      handler: function handler(val, oldVal) {\n        this.drawEcharts();\n      },\n      // 深度观察监听\n      deep: true\n    }\n  }\n};",{"version":3,"sources":["power-line.vue"],"names":[],"mappings":"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","sourcesContent":["<!--电量折线图-->\r\n<template>\r\n\t<div style=\"margin: 0px;padding:0px;\">\r\n\t\t<div id=\"chartLineBox\" style=\"width: 90%;height: 400px;text-align: center;\"></div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport echarts from 'echarts'\r\n\timport Bus from '../../bus/bus.js'\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\trearCollectorId:this.$route.params.rearCollectorId,\r\n\t\t\t\tchartLine: '',\r\n\t\t\t\tdisplay: false,\r\n\t\t\t\ttimeInterval:[],//存放时间节点\r\n\t\t\t\tnameData:['A相电流', 'B相电流','C相电流'],\r\n\t\t\t\tAData:[10,30,20,40,20,20,50],//A相线的数据\r\n\t\t\t\tBData:[50,40,30,20,40,60,10],//B相线的数据\r\n\t\t\t\tCData:[20,40,30,55,10,20,40],//C相线的数据\r\n\t\t\t}\r\n\t\t},\r\n\t\tmounted() {\r\n\t\t\t// this.getData();\r\n\t\t\tthis.drawEcharts();\r\n\t\t},\r\n\r\n\t\tmethods: {\r\n\t\t\t//获取图表所需数据\r\n\t\t\tgetData(){\r\n\t\t\t\t// var askData={\r\n\t\t\t\t// \trearCollectorId:this.rearCollectorId\r\n\t\t\t\t// };\r\n\t\t\t\t// this.$axios({\r\n\t\t\t\t// \tmethod: 'get',\r\n\t\t\t\t// \turl: this.COMMON.url + '',\r\n\t\t\t\t// \tdata:askData\r\n\t\t\t\t// }).then(response => {\r\n\t\t\t\t\t\r\n\t\t\t\t// \tthis.drawEcharts();\r\n\t\t\t\t// }).catch(error => { // 请求失败\r\n\t\t\t\t// \tconsole.log('请求失败');\r\n\t\t\t\t// \tconsole.log(error);\r\n\t\t\t\t// });\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\t//初始化图表\r\n\t\t\tdrawEcharts() {\r\n\t\t\t\tvar time = new Date();\r\n\t\t\t\tthis.chartLine = this.$echarts.init(document.getElementById('chartLineBox'));\r\n\t\t\t\t//this.chartLine = this.$echarts.init(document.getElementById('chartLineBox'), 'dark');\r\n\t\t\t\t// 指定图表的配置项和数据\r\n\t\t\t\tvar option = {\r\n\t\t\t\t\ttitle: {\r\n\t\t\t\t\t\ttext: '电力数据'\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttooltip: {\r\n\t\t\t\t\t\ttrigger: 'axis'\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlegend: {\r\n\t\t\t\t\t\tdata: this.nameData\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgrid: {\r\n\t\t\t\t\t\tleft: '3%',\r\n\t\t\t\t\t\tright: '4%',\r\n\t\t\t\t\t\tbottom: '3%',\r\n\t\t\t\t\t\tcontainLabel: true\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttoolbox: {\r\n\t\t\t\t\t\tfeature: {\r\n\t\t\t\t\t\t\tsaveAsImage: {}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\txAxis: {\r\n\t\t\t\t\t\ttype: 'category',\r\n\t\t\t\t\t\tboundaryGap: false,\r\n\t\t\t\t\t\tdata: [ '00:00:00', \r\n\t\t\t\t\t\t\t\t'00:15:00',\r\n\t\t\t\t\t\t\t\t'00:30:00', \r\n\t\t\t\t\t\t\t\t'00:45:00', \r\n\t\t\t\t\t\t\t\t'01:00:00', \r\n\t\t\t\t\t\t\t\t'01:15:00', \r\n\t\t\t\t\t\t\t\t'01:30:00',\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tyAxis: {\r\n\t\t\t\t\t\ttype: 'value'\r\n\t\t\t\t\t},\r\n\t\t\t\t\tseries: [{\r\n\t\t\t\t\t\t\tname: this.nameData[0],\r\n\t\t\t\t\t\t\ttype: 'line',\r\n\t\t\t\t\t\t\tstack: '百分比',\r\n\t\t\t\t\t\t\tdata: this.AData\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: this.nameData[1],\r\n\t\t\t\t\t\t\ttype: 'line',\r\n\t\t\t\t\t\t\tstack: '百分比',\r\n\t\t\t\t\t\t\tdata: this.BData\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: this.nameData[2],\r\n\t\t\t\t\t\t\ttype: 'line',\r\n\t\t\t\t\t\t\tstack: '百分比',\r\n\t\t\t\t\t\t\tdata: this.CData\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t};\r\n\t\t\t\t// 使用刚指定的配置项和数据显示图表。\r\n\t\t\t\tthis.chartLine.setOption(option);\r\n\t\t\t},\r\n\t\t},\r\n\t\tbeforeDestroy() {\r\n\t\t\t//组件销毁执行\r\n\t\t\t//清除定时器\r\n\t\t\tclearInterval(this.timer);\r\n\t\t\tconsole.log(\"beforeDestroy\");\r\n\t\t},\r\n\t\tdestroyed() {\r\n\t\t\t// 销毁监听事件\r\n\t\t\t//清除定时器\r\n\t\t\t//clearInterval(this.timer);\r\n\t\t\tconsole.log(\"destroyed\");\r\n\t\t},\r\n\t\tcreated() {\r\n\t\t\tBus.$on('rearData',target=>{\r\n\t\t\t\tconsole.log(target);\r\n\t\t\t})\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\t$route: {\r\n\t\t\t\thandler: function(val, oldVal) {\r\n\t\t\t\t\tthis.drawEcharts();\r\n\t\t\t\t},\r\n\t\t\t\t// 深度观察监听\r\n\t\t\t\tdeep: true\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n</script>\r\n\r\n<style>\r\n</style>\n"],"sourceRoot":"src/components/powerData"}]}